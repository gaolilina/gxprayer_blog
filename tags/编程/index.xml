<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>编程 on gxPrayer's Blog</title><link>https://example.com/tags/%E7%BC%96%E7%A8%8B/</link><description>Recent content in 编程 on gxPrayer's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Example Person</copyright><lastBuildDate>Thu, 11 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://example.com/tags/%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>github action</title><link>https://example.com/p/github-action/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://example.com/p/github-action/</guid><description>&lt;h2 id="简介">简介
&lt;/h2>&lt;p>持续集成 (CI) 是一种需要频繁提交代码到共享仓库的软件实践。可以包括代码语法检查（检查样式格式）、安全性检查、代码覆盖率、功能测试及其他自定义操作。&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/features/actions" target="_blank" rel="noopener"
>GitHub Actions&lt;/a> 是 GitHub 的&lt;a class="link" href="https://www.ruanyifeng.com/blog/2015/09/continuous-integration.html" target="_blank" rel="noopener"
>持续集成服务&lt;/a>，每一步操作是一个单独的action（可以认为是一个脚本），将action进行组合，构建自己的发布工作流。工作流程可在 GitHub 托管的虚拟机或您自行托管的机器上运行。&lt;/p>
&lt;p>公共存储库中标准 GitHub 托管的运行器和自托管运行器可免费使用 GitHub Actions。 对于专用存储库，每个 GitHub 帐户可获得一定数量的免费时间和存储以用于 GitHub 托管的运行器，具体取决于帐户的计划。 超出包含数量的任何使用量都由支出限制控制。&lt;/p>
&lt;h2 id="基本概念">基本概念
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;strong>workflow&lt;/strong> （工作流程）：持续集成一次运行的过程，就是一个 workflow。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>job&lt;/strong> （任务）：一个 workflow 由一个或多个 jobs 构成，含义是一次持续集成的运行，可以完成多个任务。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>step&lt;/strong>（步骤）：每个 job 由多个 step 构成，一步步完成。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>action&lt;/strong> （动作）：每个 step 可以依次执行一个或多个命令（action）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>workflow&lt;/strong>（工作流配置）：GitHub Actions 的配置文件叫做 workflow 文件，存放在代码仓库的&lt;code>.github/workflows&lt;/code>目录，采用yml格式编写，一个库可以有多个 workflow 文件。GitHub 只要发现&lt;code>.github/workflows&lt;/code>目录里面有&lt;code>.yml&lt;/code>文件，就会自动运行该文件。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="配置">配置
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 工作流名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">GitHub Pages &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 触发时机：定时，手动，指定操作等，可参考https://docs.github.com/zh/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># on字段也可以是事件的数组。 [push, pull_request]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">main &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Set a branch to deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">pull_request&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 要执行的任务&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">my-job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 任务的`job_id`，具体名称自定义。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">My Job &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 自定义名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 所需要的虚拟机环境。它是必填字段&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 指定每个 Job 的运行步骤，可以包含一个或多个步骤&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Print a greeting &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 步骤名称。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 使用 `concurrency` 以确保只有使用相同并发组的单一作业或工作流才会同时运行。 并发组可以是任何字符串或表达式。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">concurrency&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">group&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ github.workflow }}-${{ github.ref }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 环境变量，&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">MY_VAR&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Hi there! My name is&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">FIRST_NAME&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Mona&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ github.ref == &amp;#39;refs/heads/main&amp;#39; }} &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 除非满足条件，否则不运行。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#输入给action的参数。 每个输入参数都是一个键/值对。 输入参数被设置为环境变量。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">github_token&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.GITHUB_TOKEN }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./public &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">| &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">echo $MY_VAR $FIRST_NAME $MIDDLE_NAME $LAST_NAME.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">job2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">needs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">my-job &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 依赖关系&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">job3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">needs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">job1, job2] &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="常用action">常用action
&lt;/h2>&lt;h3 id="checkout">checkout
&lt;/h3>&lt;h2 id="常见问题">常见问题
&lt;/h2>&lt;ol>
&lt;li>push 代码403，权限被拒，需要在settings里为action开放写权限。&lt;/li>
&lt;/ol></description></item><item><title>工作项目梳理</title><link>https://example.com/p/%E5%B7%A5%E4%BD%9C%E9%A1%B9%E7%9B%AE%E6%A2%B3%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://example.com/p/%E5%B7%A5%E4%BD%9C%E9%A1%B9%E7%9B%AE%E6%A2%B3%E7%90%86/</guid><description>&lt;h2 id="基础设施">基础设施
&lt;/h2>&lt;ul>
&lt;li>Mysql
&lt;ul>
&lt;li>
&lt;p>B端场景流量小，核心支付场景需要使用事务的方式保证一致性。同时考虑配合Redis分布式锁来实现一致性。（未使用过直接加Mysql锁的场景）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>C 端很多时候无需直接查询数据库，可以考虑加一层缓存。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>非写后立即读的场景，可以考虑读从库，主从复制延迟1秒以内。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>慢查询治理。是否走了索引。添加索引或优化查询。考虑覆盖索引的情况。尽量不用like。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>监听 binlog，二进制文件，数据的变更，执行后续的操作。&lt;/p>
&lt;ul>
&lt;li>每次刷数据都会触发逻辑，需要做好相关逻辑处理，加好监控。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>数据库基本使用InnoDB引擎（引擎作用于表，不同引擎存储，功能各不相同）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MVCC，多版本并发控制，默认隔离级别会有非一致性读问题，特殊场景需要加锁。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>InnoDB支持全文索引，虽部署简单，但过于基础，优先考虑ES。&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Redis
&lt;ul>
&lt;li>用于加锁，防止并发，B端常见用法。&lt;/li>
&lt;li>内存-redis-数据库，三级缓存，数据回源。可将基础属性的查询耗时控制在数ms。
&lt;ul>
&lt;li>singleflight库，回源时一个实例只有一个协程去请求数据库。&lt;/li>
&lt;li>不同实例的数据可能存在短暂的不一致。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>用于容灾，缓存结果。&lt;/li>
&lt;li>保存临时性的数据，如定时任务等每日更新的数据。&lt;/li>
&lt;li>redis队列，很少使用。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ES
&lt;ul>
&lt;li>复杂数据的召回。&lt;/li>
&lt;li>稳定性。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>MQ
&lt;ul>
&lt;li>B端常用。解耦操作。C端降低峰值流量。&lt;/li>
&lt;li>完成一个操作，发送事件，让依赖方按需要处理对应的逻辑。（也可使用RPC回调的方式，按需要的格式实现RPC接口，管理起来更麻烦一些）&lt;/li>
&lt;li>延迟发送功能。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ClickHouse
&lt;ul>
&lt;li>特点：查询数据量大，昂贵，大流量稳定性较差&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>CronJob&lt;/li>
&lt;/ul>
&lt;h2 id="c-端容灾">C 端容灾
&lt;/h2>&lt;ul>
&lt;li>背景： 活动，节假日，突发活动，场景流量激增，对服务造成很大压力。&lt;/li>
&lt;li>表现：
&lt;ul>
&lt;li>服务CPU，内存被打满。&lt;/li>
&lt;li>ES，数据库等基础设施组件无法支持如此大的流量。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>降级方案：
&lt;ul>
&lt;li>可按百分比对用户流量进行分流，减少压力。&lt;/li>
&lt;li>对数据实时性要求不高的接口，在redis等地方，按场景的特征，设计key，直接缓存整个结果。返回给用户，避免白屏。&lt;/li>
&lt;li>ES 召回，排序等场景设计兜底方案，流量激增时，打开开关，不在走ES，降低ES压力。&lt;/li>
&lt;li>重点服务，针对关键步骤增加容灾方案，降级的逻辑，服务。&lt;/li>
&lt;li>可考虑根据埋点，定时任务，针对关键场景进行降级。&lt;/li>
&lt;li>TLB层降级方案每有接入过。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="服务稳定性">服务稳定性
&lt;/h2>&lt;h2 id="车源排序召回打包">车源排序召回打包
&lt;/h2>&lt;ul>
&lt;li>背景：
&lt;ul>
&lt;li>二手车一些属性（如自营城市，车源数量）一直在动态变化，一些还需要根据计算得出（推荐理由，需要根据距离，城市，品牌信息等计算），不方便离线存储，且不方便离线召回。&lt;/li>
&lt;li>随着二手车业务的发展，C端已经有将近20+的车源列表。不同列表文案、标签可能不同，很难复用，尤其是标签，B端各种商业化、活动的标签在快速迭代，每增加一个标签都需要新定义一个字段。同时各个车源列表的打包格式、字段定义都不统一，前后端维护成本极高。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>方案：&lt;/li>
&lt;li>问题：&lt;/li>
&lt;/ul>
&lt;h2 id="feed-流二手车c端feed流推荐车源">feed 流，二手车C端feed流推荐车源
&lt;/h2>&lt;h2 id="商业化付费">商业化付费
&lt;/h2>&lt;h2 id="商家体系">商家体系
&lt;/h2></description></item></channel></rss>